<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="
  http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
  http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

  <bean
    class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
    <property name="targetClass" value="org.springframework.util.Log4jConfigurer" />
    <property name="targetMethod" value="initLogging" />
    <property name="arguments">
      <list>
        <value>classpath:log4j.properties</value>
      </list>
    </property>
  </bean>

  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="locations" value="classpath:app.properties" />
  </bean>

  <bean id="appConfig" class="com.samsonych.AppConfig">
    <property name="gadsDir" value="${gadsDir}" />
  </bean>

  <bean id="gadsSessionFactory"
    class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="configurationClass">
      <value>org.hibernate.cfg.AnnotationConfiguration</value>
    </property>

    <property name="hibernateProperties">
      <bean class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="location">
          <value>classpath:hibernate.properties</value>
        </property>
      </bean>
    </property>
    <property name="packagesToScan">
      <list>
        <value>com.samsonych.model.wp.**</value>
      </list>
    </property>
  </bean>

  <!-- Transaction manager for a single Hibernate SessionFactory (alternative to
    JTA) -->
  <bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
    <property name="sessionFactory" ref="gadsSessionFactory" />
  </bean>
  <!-- bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"/ -->

  <!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean below) -->
  <tx:advice id="txAdvice" transaction-manager="txManager">
    <!-- the transactional semantics... -->
    <tx:attributes>
      <!-- all methods starting with 'get' are read-only -->
      <tx:method name="get*" read-only="true" />
      <tx:method name="find*" read-only="true" />
      <tx:method name="search*" read-only="true" />
      <!-- other methods use the default transaction settings (see below) -->
      <tx:method name="*" />
    </tx:attributes>
  </tx:advice>

  <tx:annotation-driven transaction-manager="txManager" />

  <!-- Activates various annotations to be detected in bean classes: Spring's @Required
    and @Autowired, as well as JSR 250's @PostConstruct, @PreDestroy and @Resource (if
    available) and JPA's @PersistenceContext and @PersistenceUnit (if available). -->

  <context:annotation-config />
  <aop:aspectj-autoproxy proxy-target-class="true" />

  <!-- ensure that the above transactional advice runs for any execution of an operation
    defined by the FooService interface -->
  <aop:config>
    <aop:pointcut id="dbManagerOperation" expression="execution(* **.*ManagerImpl.*(..))" />
    <aop:advisor advice-ref="txAdvice" pointcut-ref="dbManagerOperation" />
  </aop:config>

  <!-- DAO OBJECT DEFINITIONS -->

  <bean id="baseDAO" class="is.ida.dao.BaseDAOImpl" scope="prototype">
    <property name="sessionFactory" ref="gadsSessionFactory" />
  </bean>

  <!-- BUSINESS OBJECT DEFINITIONS -->

  <bean id="baseDBManager" class="com.samsonych.service.dba.BaseDBManagerImpl"
    scope="prototype">
    <property name="baseDAO" ref="baseDAO" />
  </bean>

</beans>
